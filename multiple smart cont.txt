//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.5.1;

contract ERC20Token {
    string public name;
    mapping(address => uint256) public balances;

    function mint() public{
        balances[msg.sender] ++; //buy token
    }
}
  
contract Demo{
    mapping(address => uint256) public balances;
    address payable wallet; 
    address token;
    
    constructor(address payable _wallet, address _token) public{
        wallet = _wallet;
        token = _token;
    }
    
    function()  external payable {
        buyToken();
    }

    function buyToken() public payable{
        ERC20Token _token = ERC20Token(address(token));
        _token.mint();
         wallet.transfer(msg.value);   //send ether to wallet
        
    }
    
} 



//simple version of above code
//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.5.1;

contract ERC20Token {
    string public name;
    mapping(address => uint256) public balances;

    function mint() public{
        balances[tx.origin] ++; 
    }
}
  
contract Demo{
    mapping(address => uint256) public balances;
    address payable wallet; 
    address token;
    
    constructor(address payable _wallet, address _token) public{
        wallet = _wallet;
        token = _token;
    }
    
    function()  external payable {
        buyToken();
    }

    function buyToken() public payable{
        ERC20Token(address(token)).mint();
        
         wallet.transfer(msg.value);   //send ether to wallet
        
    }
    
} 